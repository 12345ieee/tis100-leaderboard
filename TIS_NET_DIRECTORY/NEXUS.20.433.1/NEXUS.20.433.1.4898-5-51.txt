@0


@1
# A=ORIGINAL INPUT
1: MOV UP DOWN

# B=PRIMES FROM 2
#   TO SQRT(99)
2: MOV 2 DOWN
3: MOV 3 DOWN
4: MOV 5 DOWN
5: MOV 7 DOWN

# FINISH SIGNAL
6: MOV 0 DOWN

@2


@3


@4
1: MOV UP ACC   #A
2: SWP
3: MOV UP ACC   #B
4: JEZ D
5: MOV ACC RIGHT#B
6: SWP
7: MOV ACC RIGHT#A
#1->NEWA, -6->NEWB
8: JRO RIGHT
9: MOV RIGHT ACC#A
A: SWP
B: MOV ACC DOWN
C: JMP 5
D: SWP
E: MOV ACC DOWN

@5
# CHECK IF B IS A
# DIVISOR OF A
1: MOV LEFT DOWN#B
2: MOV LEFT ACC #A
3: SUB DOWN
4: JLZ C #FALSE
5: JEZ 8 #TRUE
6: MOV -4 DOWN
7: JMP 3
8: MOV 1 DOWN
9: MOV 1 LEFT
A: MOV DOWN LEFT
B: JMP 1
C: MOV -6 LEFT
D: MOV 3 DOWN

@6


@7


@8
# DO NOT OUTPUT
# THE 1 FACTOR
1: MOV -1 ACC
2: ADD UP
3: JEZ 8
4: ADD 1
5: MOV ACC DOWN
6: SUB 11
7: JLZ 1

# SEQUENCES ARE
# END WITH 1 OR
# A PRIME NUMBER
# GREATER THAN 7
8: MOV 0 DOWN

@9
1: MOV UP ACC   #B
2: MOV ACC UP
3: SWP
4: ADD 1        #Q
5: SWP

# -4->HOLD
#  1->RETURN QUO-
#  TIENT & DISCARD
#  3->DISCARD ONLY
6: JRO UP
7: SWP
8: MOV ACC UP
9: SUB ACC
A: SWP

@10
