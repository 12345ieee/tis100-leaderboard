@0
   MOV 5 ACC
   SUB UP
   JEZ .
   MOV 6 RIGHT
   JRO 2
.: MOV 1 RIGHT
   ADD 2
   MOV ACC RIGHT
   SUB 10
   MOV ACC RIGHT

@1
   MOV UP ACC
   JRO LEFT
   SUB 4
>: SUB 4
   JGZ >
   JEZ .
   ADD 8
.: MOV ACC RIGHT
   MOV LEFT RIGHT
   MOV LEFT ACC
&: JRO RIGHT
   MOV ACC DOWN
   JMP &
   MOV 1 DOWN
   MOV 1 DOWN

@2
   MOV -98 ACC
   ADD LEFT
   JLZ .
   MOV ACC RIGHT
   MOV LEFT RIGHT
   MOV RIGHT ACC
   JMP >
.: MOV LEFT NIL
   ADD 99
   JRO 3
>: MOV 1 LEFT
   MOV 1 LEFT
   SUB 1
   JGZ >
   MOV 3 LEFT

@3
^: MOV LEFT ACC
   JEZ *
   JRO LEFT
   MOV 12 LEFT
   JMP ^
   ADD 7
   JRO 99
   JRO 6
*: JRO LEFT
   ADD 8
   ADD 3 # LUT FOR
   SUB 1 # 98 & 99
   SUB 2
   ADD 10
   MOV ACC LEFT

@4
   MOV 999 ACC
>: ADD ANY
   JGZ >
<: ADD 160
   JLZ <
   MOV ACC RIGHT

@5
   MOV 0 ACC
   MOV UP DOWN
   JMP .
   MOV ACC LEFT
   MOV ACC LEFT
   MOV ACC LEFT
   MOV ACC LEFT
   MOV ACC LEFT
   MOV ACC LEFT
   MOV UP DOWN
   MOV -160 ACC
   ADD LEFT
.: JRO UP
   MOV ACC RIGHT

@6
   MOV 999 ACC
>: ADD RIGHT
   JGZ >
   JRO 2
<: MOV -1 UP
   ADD 125
   JLZ <
   MOV -999 UP
   MOV ACC RIGHT

@7
   MOV -1 ACC
   JMP .
   MOV ACC LEFT
   MOV ACC LEFT
   MOV ACC LEFT
   MOV ACC LEFT
   ADD ACC
   MOV ACC LEFT
   MOV -999 LEFT
   MOV -125 ACC
   ADD LEFT
.: JRO UP
^: ADD RIGHT
   JLZ ^
   MOV ACC DOWN

@8
^: MOV -159 ACC
   MOV -999 LEFT
   SUB UP
   JGZ *
   ADD 80
   JGZ .
   ADD 72
   JGZ >
   MOV 999 LEFT
   JMP ^
>: MOV 1 LEFT
.: SUB 8
   JGZ >
*: MOV 999 LEFT

@9
# LOWER NODE STORE
# V MOD 125, UPPER
# V/125 (MAX 160)

# WE STORE V=-BA^K
# MOD 20000 AS K
# COUNTS UP TO EX
# OR TO A PROXY
# FOR EX.  PROXY
# USED IF BA = 5
# OR IF EX >= 98.
# EXPONENT OF 0/1
# ARE TREATED AS 2

# DIVIDE BY -8
